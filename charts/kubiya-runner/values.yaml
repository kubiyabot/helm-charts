nats:
  jwt: "bWVnYV9zZWNyZXRfa2V5Cg=="
  secondJwt: "bWVnYV9zZWNyZXRfa2V5Cg=="
  natsServerUrl: "tls://connect.ngs.global"
  subject: "jghfjgf"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated as "RELEASE_NAME"
  name: ""
  # TODO: check if we making calls to kubectl or API which need this
  automountServiceAccountToken: true

# TODO - isnt used ic code?
# terminationGracePeriodSeconds: f30

kubiyaRunnerMeta:
  organization: "your_organization_name"
  kubiyaAgentUUID: "unique_identifier"

kubiyaOperator:
  replicas: 1
  image:
    repository: ghcr.io/kubiyabot/kubiya-operator
    pullPolicy: Always
    tag: latest
  volumeMounts: 
  - name: runner-secret-volume
    mountPath: "/etc/nats"
    readOnly: true
  volumes:
    - name: runner-secret-volume
      secret:
        secretName: runner-secret # pragma: allowlist secret
        items:
          - key: nats.creds
            path: nats.creds
  ports:
    containerPort: 80
    
agentManager:
  replicas: 2
  image:
    repository: ghcr.io/kubiyabot/agent-manager   
    pullPolicy: Always
    tag: v0.0.3  
  service:
    port: 80
    targetPort: 8080
    serviceType: "ClusterIP"
  volumeMounts:
  - name: creds-volume
    mountPath: "/opt/"
    readOnly: true
  - name: shared-volume
    mountPath: "/tmp/kubiya_shared_tools"
    readOnly: false
  volumes:
    - name: creds-volume
      secret:
        secretName: runner-secret # pragma: allowlist secret
        items:
          - key: nats.creds
            path: nats.creds

toolManager:
  image:
    repository: ghcr.io/kubiyabot/tool-manager
    pullPolicy: Always
    tag: latest
  service:
    port: 80
  containerPort: 3001
  serviceType: "ClusterIP"
  volumes: 
  - name: nats-creds-volume
    secret:
      secretName: nats-creds # pragma: allowlist secret
      items:
        - key: nats.creds
          path: nats.creds
  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: 
  - name: nats-creds-volume
    mountPath: "/opt"

  sdkServer:
    image:
      repository: ghcr.io/kubiyabot/sdk-py
      pullPolicy: Always
      tag: v0.2.0
    # TODO replace with args or extraArgs or cmdOverride
    command: 
      - "python"
      - "-m"
      - "kubiya_sdk"
      - "server"
      - "--host"
      - "0.0.0.0"
      - "--port"
      - "8000"
    containerPort: 8000
    defaultMode: 420

dagger:
  enabled: true
  engine:
    image:
      ref: registry.dagger.io/engine:v0.11.6
    config: |
      debug = true
      insecure-entitlements = ["security.insecure"]
      [registry."ghcr.io"]
        http = true
      [registry."ttl.sh"]
        http = true
      [registry."docker.io"]
        http = true
      [registry."cache-registry-svc.kubiya"]
      [log]
        format = "json"
      
  magicache:
    enabled: false
    ### Create your token via https://docs.dagger.io/manuals/user/cloud-get-started/#step-2-connect-to-dagger-cloud
    #
    # token: YOUR_DAGGER_CLOUD_TOKEN

    ### If secretName is set, a new secret will NOT be created
    #
    # secretName: EXISTING_SECRET_NAME
