{{- if .Values.imageUpdater.cronJob.create }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "kubiya-runner.fullname" . }}-helm-updater
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "image-updater.labels" . | indent 4 }}
spec:
  successfulJobsHistoryLimit: {{ .Values.imageUpdater.cronJob.successfulJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ .Values.imageUpdater.cronJob.failedJobsHistoryLimit }}
  schedule: "0 * * * *"
  jobTemplate:
    metadata:
      labels:
        {{- include "image-updater.labels" . | indent 8 }}
        suspend: {{ .Values.imageUpdater.cronJob.suspend | default true }}
    spec:
      template:
        metadata:
          labels:
            {{- include "image-updater.selectorLabels" . | indent 12 }}
        spec:
          securityContext:
            runAsUser: 0
            runAsGroup: 0
          containers:
          - name: helm-updater
            image: "alpine/helm:3.13.2"
            command: ["/bin/sh"]
            args:
            - -c
            - |
              set -e
              echo "Starting Helm release updater job"
              
              # Install required packages
              apk add --no-cache curl jq
              
              # Function to get current release values
              get_release_values() {
                echo "Fetching current release values..."
                helm get values {{ .Release.Name }} -n {{ .Release.Namespace }} -o yaml > /tmp/current_values.yaml
                if [ $? -ne 0 ]; then
                  echo "Error: Failed to get current release values"
                  exit 1
                fi
              }
              
              # Function to get latest chart version from ArtifactHub
              get_latest_version_artifacthub() {
                echo "Fetching latest chart version from ArtifactHub..."
                LATEST_VERSION=$(curl -s https://artifacthub.io/api/v1/packages/helm/kubiya-helm-charts/kubiya-runner | jq -r '.version')
                if [ -z "$LATEST_VERSION" ] || [ "$LATEST_VERSION" = "null" ]; then
                  echo "Error: Failed to get latest version from ArtifactHub"
                  return 1
                fi
                echo "Latest version: $LATEST_VERSION"
                return 0
              }
              
              # Get current release values
              get_release_values
              
              # Get latest version from ArtifactHub
              if ! get_latest_version_artifacthub; then
                echo "Error: Failed to get latest version from ArtifactHub"
                exit 1
              fi
              
              # Get current version
              CURRENT_VERSION=$(helm list -n {{ .Release.Namespace }} -o json | jq -r '.[] | select(.name=="{{ .Release.Name }}") | .chart' | cut -d'-' -f2)
              echo "Current version: $CURRENT_VERSION"
              
              # Compare versions and update if needed
              if [ "$CURRENT_VERSION" != "$LATEST_VERSION" ]; then
                echo "Updating Helm release from version $CURRENT_VERSION to $LATEST_VERSION"
                
                # Add the correct helm repository
                helm repo add kubiya-helm-charts https://kubiyabot.github.io/helm-charts/
                helm repo update
                
                # Upgrade the release with existing values
                if ! helm upgrade {{ .Release.Name }} kubiya-helm-charts/kubiya-runner \
                  --namespace {{ .Release.Namespace }} \
                  -f /tmp/current_values.yaml \
                  --version $LATEST_VERSION; then
                  echo "Error: Helm upgrade failed"
                  exit 1
                fi
                
                echo "Helm release updated successfully"
              else
                echo "Helm release is already at the latest version"
              fi
              
              echo "Helm updater job completed successfully"
          serviceAccountName: {{ include "kubiya-runner.serviceAccountName.imageUpdater" . }}
          restartPolicy: OnFailure
{{- end }}