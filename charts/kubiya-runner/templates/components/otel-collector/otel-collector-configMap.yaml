apiVersion: v1
kind: ConfigMap
metadata:
  name: kubiya-runner-otel-collector-config
  namespace: {{ .Release.Namespace }}
  labels:
    {{ include "otel-collector-extras.labels" . | nindent 4 }}
data:
  config.yaml: |
    receivers:
     # Kubelet metrics via otel-collector receiver
      prometheus:
        config:
          scrape_configs:
            # Kube-state-metrics with service discovery
            - job_name: 'kube-state-metrics'
              scrape_interval: 60s
              kubernetes_sd_configs:
                - role: endpoints
                  namespaces:
                    names: ["{{ .Release.Namespace }}"]
              relabel_configs:
                # Keep only kube-state-metrics endpoints
                - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name]
                  regex: kube-state-metrics
                  action: keep

            # Add prometheus receiver for self-monitoring
            - job_name: 'otel-collector'
              scrape_interval: 60s
              static_configs:
                - targets: ['0.0.0.0:8888']

            # Dynamic endpoint discovery for Kubiya apps
            - job_name: "kubiya-apps"
              scrape_interval: 15s
              kubernetes_sd_configs:
                - role: endpoints
                  namespaces:
                    names: ["{{ .Release.Namespace }}"]
              relabel_configs:
                # Keep only endpoints with kubiya.io/metrics-name label
                - source_labels: [__meta_kubernetes_service_label_kubiya_io_metrics_name]
                  action: keep
                  regex: (.+)
                # Add app name from the label
                - source_labels: [__meta_kubernetes_service_label_kubiya_io_metrics_name]
                  target_label: app


    processors:
      {{- if .Values.otelCollectorConfig.k8sAttributes.enabled }}
      # Processor for Kubernetes attributes, enriching metrics with Kubernetes metadata.
      k8sattributes:
        auth_type: serviceAccount
        filter:
          namespace: {{ .Release.Namespace }}
      {{- end }}

      # Processor for batching metrics. Optimized for NATS/Synadia.
      batch/metrics:
        # Aims for ~100KB batches; default is 8192 messages
        send_batch_size: 512
        # Prevents exceeding NATS limits; default is 0 (unlimited messages)
        send_batch_max_size: 1024
        # For latency/throughput expected to be better with 128KB batches; default is 8192 bytes
        # TODO: IMAGE REBUILD REQUIRED
        # send_batch_max_bytes: 128000
        # Batch sending interval. Default is "200ms"
        timeout: "10s"
        # TODO: IMAGE REBUILD REQUIRED
        # Disable batch timeout. Default is "0s" (disabled)
        # send_batch_timeout: "5s"

      # Adding additional runner's metadata via attributes
      resource:
        attributes:
          # TODO: Waiting for Mevrat response to making sure this is not duplicated metricstransform.transforms.operations
          - key: "instance"
            value: {{ .Values.organization | quote }}
            action: upsert

          - key: "runner"
            value: {{ .Values.runnerNameOverride | default .Release.Name | quote }}
            action: upsert

          - key: "organization"
            value: {{ .Values.organization | quote }}
            action: upsert

          - key: "kubiya_type"
            value: "customers-runners"
            action: upsert

      # TODO: Waiting for Mevrat response to making sure this is not duplicated resource.attributes
      {{- if .Values.otelCollectorConfig.metricstransformAttributes.enabled }}
      metricstransform:
        transforms:
          - include: '.*'
            match_type: regexp
            action: update
            operations:
              - action: update_label
                label: "instance"
                new_label: "instance"
                new_value: {{ .Values.organization | quote }}

              - action: add_label
                label: "kubiya_type"
                new_label: "kubiya_type"
                new_value: "customers-runners"

              - action: add_label
                label: "runner"
                new_label: "runner"
                new_value: {{ .Values.runnerNameOverride | default .Release.Name | quote }}

              - action: add_label
                label: "organization"
                new_label: "organization"
                new_value: {{ .Values.organization | quote }}
      {{- end }}

    # Extension for exposing health checks endpoint. Provides liveness and readiness probes (required for Gatekeeper as well).
    extensions:
      health_check:
        endpoint: 0.0.0.0:13133

    # Exporter for debugging output
    exporters:

      {{- if .Values.otelCollectorConfig.debugExporter.enabled }}
      debug:
        verbosity: normal
        # sampling_initial: 5
        # sampling_thereafter: 200
      {{- end }}

      natsexporter:
        org: {{ .Values.organization | quote }}
        endpoint: {{ .Values.nats.serverUrl | quote }}
        creds_file: "/etc/nats/nats.creds"

    service:
      extensions:
        - health_check

      pipelines:
        metrics:
          receivers: [ prometheus ]
          processors: [ k8sattributes, batch/metrics, resource ]
          {{- if .Values.otelCollectorConfig.debugExporter.enabled }}
          exporters: [ debug, natsexporter ]
          {{- else }}
          exporters: [ natsexporter ]
          {{- end }}
      telemetry:
        metrics:
          level: basic
          address: 0.0.0.0:8888