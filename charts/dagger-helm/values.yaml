nameOverride: ""
fullnameOverride: ""
volumeMountsPostfix: "" # needed for kubiya-runner to mount different volumes for different agents
engine:
  ### Customize your Dagger Engine
  #   https://github.com/moby/buildkit/blob/5997099827e676c4b6ce5774c98ade2483e0afe7/cmd/buildkitd/config/config.go
  #
  # config: |
  #   debug = true
  #   insecure-entitlements = ["security.insecure"]
  #   [registry."registry:5000"]
  #     http = true
  #   [registry."docker.io"]
  #     mirrors = ["mirror.gcr.io"]
  #   [log]
  #     format = "json"
  labels: {}

  ### Customize Dagger Engine start args
  #
  args: []

  ### Use StatefulSet instead of DaemonSet for better management
  kind: StatefulSet
  
  ### StatefulSet specific configuration
  statefulSet:
    # PVC retention policy (applies to all PVCs)
    # Only available in Kubernetes 1.23+
    persistentVolumeClaimRetentionPolicy:
      # Options: Delete, Retain
      whenDeleted: Retain
      # Options: Delete, Retain
      whenScaled: Retain

    # Use PersistentVolumeClaim for data volume
    persistentVolumeClaim:
      enabled: true
      # PVC specifications
      storageClassName: ""
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi

    # Controls how pods are created during initial scale up,
    # when replacing pods, and when scaling down.
    # Options: OrderedReady, Parallel (default: OrderedReady)
    podManagementPolicy: OrderedReady

  ### Pod securityContext configuration
  securityContext:
    runAsNonRoot: false # Cannot be true for Dagger due to cgroup management
    runAsUser: 0        # Needed for cgroup access
    fsGroup: 1001
    fsGroupChangePolicy: "OnRootMismatch"
    # Note: We need root access for the dagger engine to work properly
    # because it needs to manage cgroups and other system resources

  ### Container securityContext configuration
  containerSecurityContext:
    privileged: true        # Required for container runtime
    capabilities:
      add:
        - ALL               # Required for container runtime
    readOnlyRootFilesystem: false # Cannot be true as container needs to write to system directories
    # Note: Container runtimes like Dagger require privileged access
    # Reference: https://github.com/moby/moby/blob/38805f20f9bcc5e87869d6c79d432b166e1c88b4/hack/dind

  resources:
    limits: {}
    # limits:
    #    cpu: "1"
    #    memory: 1Gi
    requests: {}
    # requests:
    #    cpu: "1"
    #    memory: 1Gi

  image:
    ### Set a ref if you want to use a custom Dagger image
    #   NOTE: you will need to ensure that a compatible dagger CLI is embedded in the image, otherwise readiness probes will fail
    #   In the example below, we are configuring the latest, unreleased bleeding edge version
    #
    # ref: registry.dagger.io/engine:main
    pullPolicy: IfNotPresent

  ### Set taints & tolerations for this workload
  #
  # tolerations:
  #   - effect: NoSchedule
  #     key: dagger-runner
  #     operator: Exists
  # affinity:
  #   nodeAffinity:
  #     requiredDuringSchedulingIgnoredDuringExecution:
  #       nodeSelectorTerms:
  #       - matchExpressions:
  #         - key: actions-runner
  #           operator: Exists

  ### Set priorityClassName to avoid eviction
  priorityClassName: ""

  # Original readiness probe from forked dagger chart
  readinessProbe:
    exec:
      command:
        - sh
        - -exc
        - |-
          dagger core version
    initialDelaySeconds: 5
    timeoutSeconds: 14
    periodSeconds: 15
    successThreshold: 1
    failureThreshold: 10
    
  ### The Engine may need to finish operations in flight, or sync its state to a remote destination.
  #   We give it ample time by setting this value to 5 mins by default.
  #   You may want to adjust this to fit your workloads so that the Engine stops quicker.
  terminationGracePeriodSeconds: 300

  newServiceAccount:
    # name: "dagger-helm"
    create: false
    annotations: []

  existingServiceAccount: {} # name: "default"

  ### Configure lifecycle hooks for the Dagger Engine
  lifecycle:
    # PreStop hook executed before container termination
    preStop:
      exec:
        command: ["/bin/sh", "-c", "sleep 10"]  # Graceful shutdown delay

  ### HostPath Volume configuration - only used for DaemonSet
  hostPath:
    # Use hostPath for data volume (for DaemonSet only)
    dataVolume:
      # When disabled, PVC will be used if configured above
      enabled: false

    # Use hostPath for run volume
    runVolume:
      # When disabled, no run volume will be mounted
      enabled: true

    # Extras added to "fork" of dagger subchart to support kubiya-runner
additionalResources:
  # Role & RoleBinding for dagger engine.
  # Not created by default via original dagger subchart, they still may be required for some use cases.
  # Transfered as-is from original runner template. If enabled will be attached to dagger.serviceAccount.name specified above.
  role:
    create: false
  roleBinding:
    create: false
  # headless service for dagger engine discovery and load balancing used by tool-manager
    # At moment of writing this, dagger subchart does not provide headless service, while it's required for tool-manager (for now)to do load balancing
  # Port defined must match dagger container port in dagger.engine.config section.
  service:
    create: true
    # These values are need to match tool-manager's dagger config and therefore referenced in tool-manager configuration as environment variables in this file.
    # ---------------------------------------------------------------------------------------------------------------------
    # If not set, will be auto generated as name: {{ include "kubiya-runner.fullname" . }}-dagger-engine but in this case,
    # which, to be used, needs to be set in tool-manager deployment via tpl function call, which is currently done in values.yaml.
    # Should be refactored to move all required env_vars to component deployments with ability to override from values.yaml.
    # ---------------------------------------------------------------------------------------------------------------------
    name: dagger-engine-service
    port: 8080

labels:
  app.kubernetes.io/kubiya-runner-component: dagger-engine

magicache:
  enabled: false
  url: https://api.dagger.cloud/magicache
  ### Create your token via https://docs.dagger.io/manuals/user/cloud-get-started/#step-2-connect-to-dagger-cloud
  #
  # token: YOUR_DAGGER_CLOUD_TOKEN

  ### If secretName is set, a new secret will NOT be created
  #
  # secretName: EXISTING_SECRET_NAME
