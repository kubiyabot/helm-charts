name: Helm Charts CI

on:
  push:
    branches:
      - main
      - dev
      - tmp_alloy
  pull_request:
    branches:
      - main
      - dev

jobs:
  helm-ci:
    runs-on: ubuntu-22.04  
    steps:
      - name: Checkout code
        uses: actions/checkout@v4  

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.12.3  

      - name: Cache Helm Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/helm
          key: helm-${{ runner.os }}-${{ hashFiles('**/Chart.yaml') }}
          restore-keys: |
            helm-${{ runner.os }}-

      - name: Install Dependencies
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y yamllint
          helm plugin install https://github.com/quintush/helm-unittest --version v0.2.8

      - name: Add External Helm Repositories
        run: |
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo add grafana https://grafana.github.io/helm-charts
          helm repo update
      # Step 1: Update & Build Dependencies for All Charts
      - name: Update & Build Helm Dependencies
        run: |
          for chart in charts/dagger-helm charts/kubiya-runner; do
            if [ -f "$chart/Chart.yaml" ]; then
              echo "Updating dependencies for $chart..."
              helm dep update "$chart"
             
              echo "Building dependencies for $chart to persist them in charts/ directory..."
              helm dep build "$chart"
            fi
            echo 1!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
            tree charts/kubiya-runner
          done

      # Step 2: Copy Intra-Repo Dependencies Manually (`dagger-helm` â†’ `kubiya-runner/charts/`)
      - name: Copy Intra-Repo Dependencies
        run: |
          mkdir -p charts/kubiya-runner/charts
          
          if [ -d "charts/dagger-helm" ]; then
            echo "Copying dagger-helm into kubiya-runner charts/ directory..."
            cp -r charts/dagger-helm charts/kubiya-runner/charts/
          fi
          echo 2!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
          tree charts/kubiya-runner

      # Step 4: Package Local Charts in Correct Order
      - name: Package Local Charts
        run: |
          mkdir -p packaged
          echo 3!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
          tree charts/kubiya-runner

          # Package dagger-helm first
          if [ -d "charts/dagger-helm" ]; then
            echo "Packaging dagger-helm..."
            helm package charts/dagger-helm --destination packaged
          fi
          
          # Package kubiya-runner after dependencies are built
          if [ -d "charts/kubiya-runner" ]; then
            echo "Packaging kubiya-runner..."
            helm package charts/kubiya-runner --destination packaged
          fi

      # Step 5: Lint Helm Charts
      - name: Lint Helm Charts
        run: |
          for chart in charts/dagger-helm charts/kubiya-runner; do
            if [ -f "$chart/Chart.yaml" ]; then
              helm lint "$chart"
            fi
          done

      # Step 6: Run Helm Unit Tests
      - name: Run Helm Unit Tests
        run: |
          for chart in charts/dagger-helm charts/kubiya-runner; do
            if [ -f "$chart/Chart.yaml" ]; then
              helm unittest "$chart" || echo "No tests defined for $chart"
            fi
          done

      # Step 7: Final Build and Packaging
      - name: Build and Package Helm Charts
        run: |
          mkdir -p packaged-final
          
          # Package dagger-helm first
          if [ -d "charts/dagger-helm" ]; then
            echo "Packaging final version of dagger-helm..."
            helm package charts/dagger-helm --destination packaged-final
          fi
          
          # Package kubiya-runner after dependencies are built
          if [ -d "charts/kubiya-runner" ]; then
            echo "Packaging final version of kubiya-runner..."
            helm package charts/kubiya-runner --destination packaged-final
          fi

      # Step 8: Upload Packaged Charts as Artifacts
      - name: Upload Packaged Charts
        uses: actions/upload-artifact@v3
        with:
          name: helm-packaged-charts
          path: packaged-final/
